{{- if .Values.pgbouncer.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "posthog.fullname" . }}-pgbouncer
  annotations: {{- include "_snippet-metadata-annotations-common" . | nindent 4 }}
  labels: {{- include "_snippet-metadata-labels-common" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ template "posthog.fullname" . }}
      release: "{{ .Release.Name }}"
      role: pgbouncer
  {{- if not .Values.pgbouncer.hpa.enabled }}
  replicas: {{ .Values.pgbouncer.replicacount }}
  {{- end }}
  template:
    metadata:
      annotations:
        checksum/secrets.yaml: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- if .Values.pgbouncer.podAnnotations }}
        {{ toYaml .Values.pgbouncer.podAnnotations | nindent 8 }}
        {{- end }}

        {{ if .Values.pgbouncer.exporter.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "{{ .Values.pgbouncer.exporter.port }}"
        {{- end }}

      labels:
        app: {{ template "posthog.fullname" . }}
        release: "{{ .Release.Name }}"
        role: pgbouncer
        {{- if .Values.pgbouncer.podLabels }}
        {{ toYaml .Values.pgbouncer.podLabels | nindent 8 }}
        {{- end }}
    spec:
      # Time to wait before hard killing the container. Note: if the container
      # shuts down and exits before the terminationGracePeriod is done, we
      # moves to the next step immediately.
      terminationGracePeriodSeconds: 65

      serviceAccountName: {{ template "posthog.serviceAccountName" . }}
      {{- include "_snippet-topologySpreadConstraints" . | nindent 6 }}

      {{- if .Values.pgbouncer.affinity }}
      affinity: {{ toYaml .Values.pgbouncer.affinity | nindent 8 }}
      {{- end }}

      {{- if .Values.pgbouncer.nodeSelector }}
      nodeSelector: {{ toYaml .Values.pgbouncer.nodeSelector | nindent 8 }}
      {{- end }}

      {{- if .Values.pgbouncer.tolerations }}
      tolerations: {{ toYaml .Values.pgbouncer.tolerations | nindent 8 }}
      {{- end }}

      {{- if .Values.pgbouncer.schedulerName }}
      schedulerName: "{{ .Values.pgbouncer.schedulerName }}"
      {{- end }}

      {{- if .Values.pgbouncer.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.pgbouncer.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}

      {{- if or .Values.pgbouncer.image.pullSecrets .Values.pgbouncer.exporter.image.pullSecrets }}
      imagePullSecrets:
        {{- if .Values.pgbouncer.image.pullSecrets }}
        {{- range .Values.pgbouncer.image.pullSecrets }}
        - name: {{ . }}
        {{- end }}
        {{- end }}
        {{- if .Values.pgbouncer.exporter.image.pullSecrets }}
        {{- range .Values.pgbouncer.exporter.image.pullSecrets }}
        - name: {{ . }}
        {{- end }}
        {{- end }}
      {{- end }}

      containers:

      - name: {{ .Chart.Name }}-pgbouncer
        image: "{{ .Values.pgbouncer.image.repository }}:{{ .Values.pgbouncer.image.tag }}"
        imagePullPolicy: {{ .Values.pgbouncer.image.pullPolicy }}
        ports:
        - name: pgbouncer
          containerPort: 6543
        env:
        - name: POSTGRESQL_USERNAME
          value: {{ include "posthog.postgresql.username" . }}
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "posthog.postgresql.secretName" . }}
              key: {{ include "posthog.postgresql.secretPasswordKey" . }}
        - name: POSTGRESQL_DATABASE
          value: {{ include "posthog.postgresql.database" . }}
        - name: POSTGRESQL_HOST
          value: {{ include "posthog.postgresql.host" . }}
        - name: POSTGRESQL_PORT
          value: {{ include "posthog.postgresql.port" . | quote }}

        - name: PGBOUNCER_DATABASE
          value: {{ include "posthog.postgresql.database" . }}

        {{- if .Values.pgbouncer.env }}
        {{ toYaml .Values.pgbouncer.env | nindent 8 }}
        {{- end }}

        readinessProbe:
          tcpSocket:
            port: 6543
          failureThreshold: {{ .Values.pgbouncer.readinessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.pgbouncer.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.pgbouncer.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.pgbouncer.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.pgbouncer.readinessProbe.timeoutSeconds }}

        livenessProbe:
          tcpSocket:
            port: 6543
          failureThreshold: {{ .Values.pgbouncer.livenessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.pgbouncer.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.pgbouncer.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.pgbouncer.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.pgbouncer.livenessProbe.timeoutSeconds }}

        lifecycle:
          preStop:
            exec:
              command: [
                "sh", "-c",
                #
                # Introduce a delay to the shutdown sequence to wait for the
                # pod eviction event to propagate into the cluster.
                #
                # See: https://blog.gruntwork.io/delaying-shutdown-to-wait-for-pod-deletion-propagation-445f779a8304
                #
                #
                # Then, gracefully shutdown pgbouncer by sending a SIGINT
                # to the process (see https://www.pgbouncer.org/usage.html)
                # and sleep again for max query timeout + 1s.
                #
                # Note: once the connections are all drained, the process will
                # exit before the 'sleep 31' completes and the pod will be
                # removed. Unfortunately we will also get an ugly 'FailedPreStopHook'
                # warning in the k8s event logs but I'm not sure how we can avoid it.
                #
                "sleep 30 && kill -INT 1 && sleep 31"
              ]

        {{- if .Values.pgbouncer.extraVolumeMounts }}
        volumeMounts: {{- toYaml .Values.pgbouncer.extraVolumeMounts | nindent 8 }}
        {{- end }}

        {{- if .Values.pgbouncer.resources }}
        resources: {{ toYaml .Values.pgbouncer.resources | nindent 10 }}
        {{- end }}

        {{- if .Values.pgbouncer.securityContext.enabled }}
        securityContext: {{- omit .Values.pgbouncer.securityContext "enabled" | toYaml | nindent 12 }}
        {{- end }}

      {{- if .Values.pgbouncer.extraVolumes }}
      volumes: {{- toYaml .Values.pgbouncer.extraVolumes | nindent 6 }}
      {{- end }}

      {{ if .Values.pgbouncer.exporter.enabled }}
      - name: metrics
        image: "{{ .Values.pgbouncer.exporter.image.repository }}:{{ .Values.pgbouncer.exporter.image.tag }}"
        imagePullPolicy: {{ .Values.pgbouncer.exporter.image.pullPolicy }}
        env:
        - name: POSTGRESQL_USERNAME
          value: {{ include "posthog.postgresql.username" . }}
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "posthog.postgresql.secretName" . }}
              key: {{ include "posthog.postgresql.secretPasswordKey" . }}
        command:
          - /bin/sh
          - -c
          - >
              until (nc -vz 127.0.0.1 6543);
              do
                echo "waiting for PgBouncer"; sleep 1;
              done

              pgbouncer_exporter \
                --web.listen-address=":{{ .Values.pgbouncer.exporter.port }}" \
                --web.telemetry-path="/metrics" \
                --log.level="info" \
                --log.format="json" \
                --pgBouncer.connectionString="postgres://$POSTGRESQL_USERNAME:$POSTGRESQL_PASSWORD@127.0.0.1:6543/pgbouncer?sslmode=disable&connect_timeout=10"
        ports:
          - name: metrics
            containerPort: {{ .Values.pgbouncer.exporter.port }}

        {{- if .Values.pgbouncer.exporter.resources }}
        resources: {{ toYaml .Values.pgbouncer.exporter.resources | nindent 10 }}
        {{- end }}

        {{- if .Values.pgbouncer.exporter.securityContext.enabled }}
        securityContext: {{- omit .Values.pgbouncer.exporter.securityContext "enabled" | toYaml | nindent 12 }}
        {{- end }}
      {{- end -}}
{{- end }}
