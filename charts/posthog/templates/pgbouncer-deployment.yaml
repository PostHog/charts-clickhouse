{{- if .Values.pgbouncer.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "posthog.fullname" . }}-pgbouncer
  annotations: {{- include "_snippet-metadata-annotations-common" . | nindent 4 }}
  labels: {{- include "_snippet-metadata-labels-common" . | nindent 4 }}
spec:
  selector:
    matchLabels:
        app: {{ template "posthog.fullname" . }}
        release: "{{ .Release.Name }}"
        role: pgbouncer
  {{- if not .Values.pgbouncer.hpa.enabled }}
  replicas: {{ .Values.pgbouncer.replicacount }}
  {{- end }}
  template:
    metadata:
      annotations:
        checksum/secrets.yaml: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- if .Values.pgbouncer.podAnnotations }}
{{ toYaml .Values.pgbouncer.podAnnotations | indent 8 }}
        {{- end }}

        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9127"
      labels:
        app: {{ template "posthog.fullname" . }}
        release: "{{ .Release.Name }}"
        role: pgbouncer
        {{- if .Values.pgbouncer.podLabels }}
{{ toYaml .Values.pgbouncer.podLabels | indent 8 }}
        {{- end }}
    spec:
      # Time to wait before hard killing the container. Note: if the container
      # shuts down and exits before the terminationGracePeriod is done, we
      # moves to the next step immediately.
      terminationGracePeriodSeconds: 70

      serviceAccountName: {{ template "posthog.serviceAccountName" . }}
      {{- if .Values.pgbouncer.affinity }}
      affinity:
{{ toYaml .Values.pgbouncer.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.pgbouncer.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.pgbouncer.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.pgbouncer.tolerations }}
      tolerations:
{{ toYaml .Values.pgbouncer.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.pgbouncer.schedulerName }}
      schedulerName: "{{ .Values.pgbouncer.schedulerName }}"
      {{- end }}
      {{- if .Values.pgbouncer.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.pgbouncer.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}-pgbouncer
        image: "{{ .Values.pgbouncer.image.repository }}:{{ .Values.pgbouncer.image.tag }}"
        imagePullPolicy: {{ .Values.pgbouncer.image.pullPolicy }}

        ports:
        - containerPort: 6543
        env:
        - name: POSTGRESQL_USERNAME
          value: {{ include "posthog.postgresql.username" . }}
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "posthog.postgresql.secretName" . }}
              key: {{ include "posthog.postgresql.secretPasswordKey" . }}
        - name: POSTGRESQL_HOST
          value: {{ include "posthog.postgresql.host" . }}
        - name: POSTGRESQL_PORT
          value: {{ include "posthog.postgresql.port" . | quote }}
        - name: POSTGRESQL_DATABASE
          value: {{ include "posthog.postgresql.database" . }}
        - name: PGBOUNCER_DATABASE
          value: {{ include "posthog.postgresql.database" . }}

{{- if .Values.pgbouncer.env }}
{{ toYaml .Values.pgbouncer.env | indent 8 }}
{{- end }}
        readinessProbe:
          tcpSocket:
            port: 6543
          failureThreshold: {{ .Values.pgbouncer.readinessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.pgbouncer.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.pgbouncer.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.pgbouncer.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.pgbouncer.readinessProbe.timeoutSeconds }}

        livenessProbe:
          tcpSocket:
            port: 6543
          failureThreshold: {{ .Values.pgbouncer.livenessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.pgbouncer.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.pgbouncer.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.pgbouncer.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.pgbouncer.livenessProbe.timeoutSeconds }}

        lifecycle:
          preStop:
            exec:
              #
              # Before killing the container, let'send a SIGINT to the pgbouncer
              # process for a safe shutdown. Let's then wait 60s that is the double
              # of the max connection timeout we have in our app to make sure
              # connections are drained before we terminate the container.
              #
              # See https://www.pgbouncer.org/usage.html
              #
              command: ["/bin/sh", "-c", "pkill -INT pgbouncer && sleep 60"]

      {{- if .Values.pgbouncer.extraVolumeMounts }}
        volumeMounts: {{- toYaml .Values.pgbouncer.extraVolumeMounts | nindent 8 }}
      {{- end }}
{{- if .Values.pgbouncer.resources }}
        resources:
{{ toYaml .Values.pgbouncer.resources | indent 12 }}
{{- end }}
        {{- if .Values.pgbouncer.securityContext.enabled }}
        securityContext: {{- omit .Values.pgbouncer.securityContext "enabled" | toYaml | nindent 12 }}
        {{- end }}
    {{- if .Values.pgbouncer.extraVolumes }}
      volumes: {{- toYaml .Values.pgbouncer.extraVolumes | nindent 6 }}
    {{- end }}

      {{ if .Values.pgbouncer.exporter.enabled }}
      - name: metrics
        image: "{{ .Values.pgbouncer.exporter.image.repository }}:{{ .Values.pgbouncer.exporter.image.tag }}"
        imagePullPolicy: {{ .Values.pgbouncer.exporter.image.pullPolicy }}
        args:
        - --web.listen-address=:9127
        - --web.telemetry-path=/metrics
        - --log.level=info
        - --log.format=json
        - --pgBouncer.connectionString=postgres://${POSTGRESQL_USERNAME}:${POSTGRESQL_PASSWORD}@127.0.0.1:6543/pgbouncer?sslmode=disable&connect_timeout=10
        env:
        - name: POSTGRESQL_USERNAME
          value: {{ include "posthog.postgresql.username" . }}
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "posthog.postgresql.secretName" . }}
              key: {{ include "posthog.postgresql.secretPasswordKey" . }}
        ports:
          - name: metrics
            containerPort: 9127
      {{- end -}}
{{- end }}
