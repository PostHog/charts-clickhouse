apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-migrate"
  labels:
    app: {{ template "posthog.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-delete-policy": "hook-succeeded"
    "helm.sh/hook-weight": "0"
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}-migrate"
      annotations:
        checksum/secrets.yaml: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
      labels:
        app: {{ template "posthog.fullname" . }}
        release: "{{ .Release.Name }}"
        {{- if (eq (default .Values.image.tag "none") "latest") }}
        date: "{{ now | unixEpoch }}"
        {{- end }}
        {{- if .Values.worker.podLabels }}
{{ toYaml .Values.worker.podLabels | indent 8 }}
        {{- end }}
    spec:
      {{- with .Values.hooks.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      restartPolicy: Never
      {{- if .Values.image.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.image.imagePullSecrets | indent 8 }}
      {{- end }}
      containers:
      - name: migrate-job
        image: {{ template "posthog.image.fullPath" . }}
        command:
          - /bin/sh
          - -c
          - |
            python manage.py notify_helm_install || true
            python manage.py migrate
            python manage.py migrate_clickhouse
        env:
        - name: SENTRY_DSN
          value: {{ .Values.sentryDSN | quote }}
{{- if .Values.env }}
{{ toYaml .Values.env | indent 8 }}
{{- end }}
{{- if .Values.worker.env }}
{{ toYaml .Values.worker.env | indent 8 }}
{{- end }}
{{- if .Values.hooks.migrate.env }}
{{ toYaml .Values.hooks.migrate.env | indent 8 }}
{{- end }}
        - name: SITE_URL
          value: {{ template "posthog.site.url" . }}
        - name: DEPLOYMENT
          value: {{ template "posthog.deploymentEnv" . }}
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "posthog.fullname" . }}
              key: posthog-secret
        - name: POSTHOG_DB_USER
          value: {{ default "posthog" .Values.postgresql.postgresqlUsername | quote }}
        - name: POSTHOG_DB_NAME
          value: {{ default "posthog" .Values.postgresql.postgresqlDatabase | quote }}
        - name: POSTHOG_DB_PASSWORD
          valueFrom:
            secretKeyRef:
            {{- if .Values.postgresql.existingSecret }}
              name: {{ .Values.postgresql.existingSecret }}
            {{- else }}
              name: {{ template "posthog.postgresql.secret" . }}
            {{- end }}
              key: {{ template "posthog.postgresql.secretKey" . }}
        - name: POSTHOG_POSTGRES_HOST
          value: {{ template "posthog.pgbouncer.host" . }}
        - name: POSTHOG_POSTGRES_PORT
          value: {{ include "posthog.pgbouncer.port" . | quote }}
        - name: USING_PGBOUNCER
          value: 'true'
          {{- if or (.Values.redis.enabled) (.Values.redis.password) }}
        - name: POSTHOG_REDIS_PASSWORD
          value: {{ .Values.redis.password | quote }}
          {{- end }}
        - name: POSTHOG_REDIS_HOST
          value: {{ template "posthog.redis.host" . }}
        - name: POSTHOG_REDIS_PORT
          value: {{ include "posthog.redis.port" . | quote }}
        - name: EMAIL_HOST
          value: {{ default "" .Values.email.host | quote }}
        - name: EMAIL_PORT
          value: {{ default "" .Values.email.port | quote }}
        - name: EMAIL_HOST_USER
          value: {{ default "" .Values.email.user | quote }}
        - name: EMAIL_HOST_PASSWORD
          valueFrom:
            secretKeyRef:
            {{- if .Values.email.existingSecret }}
              name: {{ .Values.email.existingSecret }}
            {{- else }}
              name: {{ template "posthog.fullname" . }}
            {{- end }}
              key: smtp-password
        {{- if .Release.IsInstall }}
        - name: CLICKHOUSE_INITIAL_MIGRATIONS
          value: '1'
        {{- end }}
        - name: PRIMARY_DB
          value: clickhouse
        - name: CLICKHOUSE_DATABASE
          value: {{ .Values.clickhouse.database | quote }}
        - name: CLICKHOUSE_HOST
          {{- if .Values.clickhouse.host }}
          value: {{ .Values.clickhouse.host | quote }}
          {{- else }}
          value: {{ template "posthog.clickhouse.fullname" . }}
          {{- end }}
        - name: CLICKHOUSE_USER
          value: {{ .Values.clickhouse.user | quote }}
        - name: CLICKHOUSE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "posthog.fullname" . }}
              key: clickhouse-password
        - name: CLICKHOUSE_REPLICATION
          value: {{ .Values.clickhouse.replication | quote }}
        - name: CLICKHOUSE_SECURE
          value: {{ .Values.clickhouse.secure | quote }}
        - name: CLICKHOUSE_VERIFY
          value: {{ .Values.clickhouse.verify | quote }}
        - name: CLICKHOUSE_ASYNC
          value: {{ .Values.clickhouse.async| quote }}
        - name: CAPTURE_INTERNAL_METRICS
          value: {{ .Values.web.internalMetrics.capture| quote }}
        {{- if .Values.kafka.enabled }}
        - name: KAFKA_URL
          value: {{ template "posthog.kafka.url" . }}
        {{- end }}
        - name: EMAIL_USE_TLS
          value: {{ default "false" .Values.email.use_tls | quote }}
        - name: EMAIL_USE_SSL
          value: {{ default "false" .Values.email.use_ssl | quote }}
        - name: DEFAULT_FROM_EMAIL
          value: {{ .Values.email.from_email | quote }}
        - name: HELM_INSTALL_INFO
          value: {{ template "posthog.helmInstallInfo" . }}
        resources:
{{ toYaml .Values.hooks.migrate.resources | indent 10 }}
