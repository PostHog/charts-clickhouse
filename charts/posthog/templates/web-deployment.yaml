{{- include "snippet.removed-vars-errors" . -}}

{{- if .Values.web.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "posthog.fullname" . }}-web
  labels: {{- include "_snippet-metadata-labels-common" . | nindent 4 }}
  annotations: {{- include "_snippet-metadata-annotations-common" . | nindent 4 }}
spec:
  selector:
    matchLabels:
        app: {{ template "posthog.fullname" . }}
        release: "{{ .Release.Name }}"
        role: web
  {{- if not .Values.web.hpa.enabled }}
  replicas: {{ .Values.web.replicacount }}
  {{- end }}
  template:
    metadata:
      annotations:
        metrics-enabled: {{ .Values.metrics.enabled | quote }}
        checksum/secrets.yaml: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
      {{- if .Values.web.podAnnotations }}
{{ toYaml .Values.web.podAnnotations | indent 8 }}
      {{- end }}
      labels:
        app: {{ template "posthog.fullname" . }}
        release: "{{ .Release.Name }}"
        role: web
        {{- if (eq (default .Values.image.tag "none") "latest") }}
        date: "{{ now | unixEpoch }}"
        {{- end }}
        {{- if .Values.web.podLabels }}
{{ toYaml .Values.web.podLabels | indent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "posthog.serviceAccountName" . }}
      {{- if .Values.web.affinity }}
      affinity:
{{ toYaml .Values.web.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.web.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.web.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.web.tolerations }}
      tolerations:
{{ toYaml .Values.web.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.web.schedulerName }}
      schedulerName: "{{ .Values.web.schedulerName }}"
      {{- end }}
      {{- if .Values.image.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.image.imagePullSecrets | indent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}-web
        image: {{ template "posthog.image.fullPath" . }}
        command:
          - /bin/sh
          - -c
          - |
            ./bin/docker-server
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        env:
        # Redis env variables
        {{- include "snippet.redis-env" . | indent 8 }}
        - name: SITE_URL
          value: {{ template "posthog.site.url" . }}
        - name: DEPLOYMENT
          value: {{ template "posthog.deploymentEnv" . }}
        - name: SENTRY_DSN
          value: {{ .Values.sentryDSN | quote }}
        - name: DISABLE_SECURE_SSL_REDIRECT
          value: '1'
        - name: IS_BEHIND_PROXY
          value: '1'
      {{- if eq .Values.web.secureCookies false }}
        - name: SECURE_COOKIES
          value: '0'
      {{- end }}
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "posthog.fullname" . }}
              key: posthog-secret
        - name: POSTHOG_DB_USER
          value: {{ default "posthog" .Values.postgresql.postgresqlUsername | quote }}
        - name: POSTHOG_DB_NAME
          value: {{ default "posthog" .Values.postgresql.postgresqlDatabase | quote }}
        - name: POSTHOG_DB_PASSWORD
          valueFrom:
            secretKeyRef:
            {{- if .Values.postgresql.existingSecret }}
              name: {{ .Values.postgresql.existingSecret }}
            {{- else }}
              name: {{ template "posthog.postgresql.secret" . }}
            {{- end }}
              key: {{ template "posthog.postgresql.secretKey" . }}
        - name: POSTHOG_POSTGRES_HOST
          value: {{ template "posthog.pgbouncer.host" . }}
        - name: POSTHOG_POSTGRES_PORT
          value: {{ include "posthog.pgbouncer.port" . | quote }}
        - name: USING_PGBOUNCER
          value: 'true'
        {{- if .Values.statsd.enabled }}
        - name: STATSD_HOST
          value: {{ template "posthog.statsd.host" . }}
        - name: STATSD_PORT
          value: "9125"
        {{- end }}
        - name: EMAIL_HOST
          value: {{ default "" .Values.email.host | quote }}
        - name: EMAIL_PORT
          value: {{ default "" .Values.email.port | quote }}
        - name: EMAIL_HOST_USER
          value: {{ default "" .Values.email.user | quote }}
        - name: EMAIL_HOST_PASSWORD
          valueFrom:
            secretKeyRef:
            {{- if .Values.email.existingSecret }}
              name: {{ .Values.email.existingSecret }}
            {{- else }}
              name: {{ template "posthog.fullname" . }}
            {{- end }}
              key: smtp-password
        - name: EMAIL_USE_TLS
          value: {{ default "false" .Values.email.use_tls | quote }}
        - name: EMAIL_USE_SSL
          value: {{ default "false" .Values.email.use_ssl | quote }}
        - name: DEFAULT_FROM_EMAIL
          value: {{ .Values.email.from_email | quote }}
        - name: SAML_ENTITY_ID
          value: {{ default "" .Values.saml.entity_id | quote }}
        - name: SAML_ACS_URL
          value: {{ default "" .Values.saml.acs_url | quote }}
        - name: SAML_X509_CERT
          value: {{ default "" .Values.saml.x509_cert | quote }}
        - name: SAML_ATTR_PERMANENT_ID
          value: {{ default "" .Values.saml.attr_permanent_id | quote }}
        - name: SAML_ATTR_FIRST_NAME
          value: {{ default "" .Values.saml.attr_first_name | quote }}
        - name: SAML_ATTR_LAST_NAME
          value: {{ default "" .Values.saml.attr_last_name | quote }}
        - name: SAML_ATTR_EMAIL
          value: {{ default "" .Values.saml.attr_email | quote }}
        {{- if eq .Values.saml.enforced true }}
        - name: SAML_ENFORCED
          value: '1'
        {{- end }}
        {{- if eq .Values.saml.disabled true }}
        - name: SAML_DISABLED
          value: '1'
        {{- end }}
        {{- if .Values.clickhouse.enabled }}
        - name: PRIMARY_DB
          value: clickhouse
        - name: CLICKHOUSE_DATABASE
          value: {{ .Values.clickhouse.database | quote }}
        - name: CLICKHOUSE_HOST
          {{- if .Values.clickhouse.host }}
          value: {{ .Values.clickhouse.host | quote }}
          {{- else }}
          value: {{ template "posthog.clickhouse.fullname" . }}
          {{- end }}
        - name: CLICKHOUSE_USER
          value: {{ .Values.clickhouse.user | quote }}
        - name: CLICKHOUSE_PASSWORD
          value: {{ .Values.clickhouse.password | quote }}
        - name: CLICKHOUSE_REPLICATION
          value: {{ .Values.clickhouse.replication | quote }}
        - name: CLICKHOUSE_SECURE
          value: {{ .Values.clickhouse.secure | quote }}
        - name: CLICKHOUSE_VERIFY
          value: {{ .Values.clickhouse.verify | quote }}
        - name: CLICKHOUSE_ASYNC
          value: {{ .Values.clickhouse.async| quote }}
        - name: CAPTURE_INTERNAL_METRICS
          value: {{ .Values.web.internalMetrics.capture| quote }}
        {{- end }}
        {{- if .Values.kafka.enabled }}
        - name: KAFKA_URL
          value: {{ template "posthog.kafka.url" . }}
        {{- end }}
        {{- if .Values.plugins.ingestion.enabled }}
        - name: PLUGIN_SERVER_INGESTION
          value: 'true'
        {{- end }}
        - name: HELM_INSTALL_INFO
          value: {{ template "posthog.helmInstallInfo" . }}
{{- if .Values.env }}
{{ toYaml .Values.env | indent 8 }}
{{- end }}
{{- if .Values.web.env }}
{{ toYaml .Values.web.env | indent 8 }}
{{- end }}
        livenessProbe:
          failureThreshold: {{ .Values.web.livenessProbe.failureThreshold }}
          httpGet:
            path: /_health/
            port: {{ .Values.service.internalPort }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.web.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.web.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.web.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.web.livenessProbe.timeoutSeconds }}
        readinessProbe:
          failureThreshold: {{ .Values.web.readinessProbe.failureThreshold }}
          httpGet:
            path: /_health/
            port: {{ .Values.service.internalPort }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.web.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.web.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.web.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.web.readinessProbe.timeoutSeconds }}
        resources:
{{ toYaml .Values.web.resources | indent 12 }}
      initContainers:
      {{- include "_snippet-initContainers-wait-for-service-dependencies" . | indent 8 }}
      {{- include "_snippet-initContainers-wait-for-migrations" . | indent 8 }}
{{- end }}
