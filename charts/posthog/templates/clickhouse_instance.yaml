{{- if .Values.clickhouseOperator.enabled }}
{{ if (eq (.Values.cloud | toString) "gcp" )}}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: gce-resizable
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-standard
  fstype: ext4
  replication-type: none
reclaimPolicy: Retain
#volumeBindingMode: Immediate
allowVolumeExpansion: true
{{- else if (eq (.Values.cloud | toString) "aws") }}
#
# AWS resizable disk example
#
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: gp2-resizable
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp2
reclaimPolicy: Retain
#volumeBindingMode: Immediate
allowVolumeExpansion: true
{{ end }}
---
apiVersion: "clickhouse.altinity.com/v1"
kind: "ClickHouseInstallation"
metadata:
  name: "posthog"
spec:
  defaults:
    templates:
      dataVolumeClaimTemplate: data-volumeclaim-template
      serviceTemplate: chi-service-template
  configuration:
    users:
      admin/password: {{ .Values.clickhouse.password }}
      admin/networks/ip: "0.0.0.0/0"
      admin/profile: default
      admin/quota: default
    profiles:
      default/allow_experimental_window_functions: "1"
    clusters:
      - name: {{ .Values.clickhouse.database | quote }}
        templates:
          podTemplate: pod-template-with-volumes
        layout:
          shardsCount: 1
          replicasCount: 1
    settings:
      format_schema_path: /etc/clickhouse-server/config.d/
    files:
      events.proto: |
        syntax = "proto3";
        message Event {
          string uuid = 1;
          string event = 2;
          string properties = 3;
          string timestamp = 4;
          uint64 team_id = 5;
          string distinct_id = 6;
          string created_at = 7;
          string elements_chain = 8;
        }
    zookeeper:
      nodes:
      {{- if .Values.clickhouse.externalZookeeper }}
      {{ toYaml .Values.clickhouse.externalZookeeper.servers | indent 4 }}
      {{- else }}
        - host: {{ template "posthog.zookeeper.host" . }}
          port: {{ template "posthog.zookeeper.port" . }}
      {{- end }}
  templates:
    podTemplates:
      - name: pod-template-with-volumes
        spec:
          securityContext:
            runAsUser: 101
            runAsGroup: 101
            fsGroup: 101
          containers:
            - name: clickhouse
              # KEEP CLICKHOUSE-SERVER VERSION IN SYNC WITH
              # https://github.com/PostHog/posthog/edit/master/ee/docker-compose.ch.yml#L17
              image: yandex/clickhouse-server:21.6.5.37
              command:
                - /bin/bash
                - -c
                - /usr/bin/clickhouse-server --config-file=/etc/clickhouse-server/config.xml
              ports:
                - name: http
                  containerPort: 8123
                - name: client
                  containerPort: 9000
                - name: interserver
                  containerPort: 9009
              volumeMounts:
                - name: data-volumeclaim-template
                  mountPath: /var/lib/clickhouse
              {{- if .Values.clickhouseOperator.useNodeSelector }}
              nodeSelector:
                clickhouse: true
              {{- end }}
    serviceTemplates:
      - name: chi-service-template
        generateName: {{ template "posthog.clickhouse.fullname" . }}
        spec:
          ports:
            - name: http
              port: 8123
            - name: tcp
              port: 9000
          type: {{ .Values.clickhouseOperator.serviceType }}
    volumeClaimTemplates:
      - name: data-volumeclaim-template
        spec:
          {{- if (eq (.Values.cloud | toString) "gcp" )}}
          storageClassName: gce-resizable
          {{- else if (eq (.Values.cloud | toString) "aws") }}
          storageClassName: gp2-resizable
          {{- end }}
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: {{ .Values.clickhouseOperator.storage | quote }}
{{- end }}
