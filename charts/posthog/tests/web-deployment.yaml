suite: PostHog web deployment definition
templates:
  - templates/web-deployment.yaml
  - templates/secrets.yaml

tests:
  - it: should be empty if web.enabled is set to false
    template: templates/web-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
      web.enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should have the correct apiVersion
    template: templates/web-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
    asserts:
      - hasDocuments:
          count: 1
      - isAPIVersion:
          of: apps/v1

  - it: should be the correct kind
    template: templates/web-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment

  - it: should allow specifying a custom busybox image for init containers
    template: templates/web-deployment.yaml
    set:
      cloud: local
      busybox:
        image: some-customer-image
    asserts:
      - equal:
          path: spec.template.spec.initContainers[0].image
          value: some-customer-image

  - it: should have a default image for init containers
    template: templates/web-deployment.yaml
    set:
      cloud: local
    asserts:
      - equal:
          path: spec.template.spec.initContainers[0].image
          value: busybox:1.34

  - it: should have a pod securityContext
    template: templates/web-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
      web.podSecurityContext.enabled: true
      web.podSecurityContext.runAsUser: 1001
      web.podSecurityContext.fsGroup: 2000
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.template.spec.securityContext.runAsUser
          value: 1001
      - equal:
          path: spec.template.spec.securityContext.fsGroup
          value: 2000

  - it: should have a container securityContext
    template: templates/web-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
      web.securityContext.enabled: true
      web.securityContext.runAsUser: 1001
      web.securityContext.allowPrivilegeEscalation: false
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.template.spec.containers[0].securityContext.runAsUser
          value: 1001
      - equal:
          path: spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation
          value: false

  - it: should not have a pod securityContext
    template: templates/web-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
      web.podSecurityContext.enabled: false
    asserts:
      - hasDocuments:
          count: 1
      - isEmpty:
          path: spec.template.spec.securityContext
          value: 1001

  - it: should not have a container securityContext
    template: templates/web-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
      web.securityContext.enabled: false
    asserts:
      - hasDocuments:
          count: 1
      - isEmpty:
          path: spec.template.spec.containers[0].securityContext

  - it: sets SENTRY_DSN env var
    template: templates/web-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
      sentryDSN: sentry.endpoint
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SENTRY_DSN
            value: sentry.endpoint


  - it: allows setting imagePullSecrets
    template: templates/web-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local
      image.pullSecrets: [secret]
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.template.spec.imagePullSecrets
          value: [name: secret]

  - it: allows setting pgbouncer read env
    template: templates/web-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local
      image.pullSecrets: [secret]
      pgbouncerRead:
        enabled: true
        host: beep-boop
    asserts:
      - hasDocuments:
          count: 1
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: POSTHOG_POSTGRES_READ_HOST
            value: RELEASE-NAME-posthog-pgbouncer-read

  - it: do not set postgres read host unless configured
    template: templates/web-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local
      image.pullSecrets: [secret]
      pgbouncerRead:
        host: beep-boop
    asserts:
      - hasDocuments:
          count: 1
      - notContains:
          path: spec.template.spec.containers[0].env
          content:
            name: POSTHOG_POSTGRES_READ_HOST
            value: beep-boop

  - it: should be able to have web.image set
    template: templates/web-deployment.yaml
    set:
      cloud: local
      web.image.sha: sha256:2a16a47578d0193480dd02bcda7952f09acb34eacdf764315123f2271f72838d
      web.image.repository: webimage
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.template.spec.containers[0].image
          value: webimage@sha256:2a16a47578d0193480dd02bcda7952f09acb34eacdf764315123f2271f72838d

  - it: should be able to have custom web.image.command set
    template: templates/web-deployment.yaml
    set:
      cloud: local
      web.image.command: [./bin/run]
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.template.spec.containers[0].command
          value:
          - ./bin/run
