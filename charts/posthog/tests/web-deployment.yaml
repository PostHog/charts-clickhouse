suite: PostHog web deployment definition
templates:
  - templates/web-deployment.yaml
  - templates/secrets.yaml

tests:
  - it: should be empty if web.enabled is set to false
    template: templates/web-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
      web.enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should have the correct apiVersion
    template: templates/web-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
    asserts:
      - hasDocuments:
          count: 1
      - isAPIVersion:
          of: apps/v1

  - it: should be the correct kind
    template: templates/web-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment

  - it: should have a pod securityContext
    template: templates/web-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
      web.podSecurityContext.enabled: true
      web.podSecurityContext.runAsUser: 1001
      web.podSecurityContext.fsGroup: 2000
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.template.spec.securityContext.runAsUser
          value: 1001
      - equal:
          path: spec.template.spec.securityContext.fsGroup
          value: 2000
  
  - it: should have a container securityContext
    template: templates/web-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
      web.securityContext.enabled: true
      web.securityContext.runAsUser: 1001
      web.securityContext.allowPrivilegeEscalation: false
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.template.spec.containers[0].securityContext.runAsUser
          value: 1001
      - equal:
          path: spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation
          value: false            
          
  