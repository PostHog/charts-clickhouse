suite: PostHog recordings ingestion KEDA ScaledObject definition
templates:
  - templates/recordings-ingestion-deployment.yaml
  - templates/secrets.yaml

tests:
  - it: should be empty if recordingsIngestion.enabled and recordingsIngestion.keda.enabled are set to false
    templates:
      - templates/recordings-ingestion-deployment.yaml
    set:
      cloud: private
      recordingsIngestion.enabled: false
      recordingsIngestion.keda.enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should be empty if recordingsIngestion.enabled is true and recordingsIngestion.keda.enabled is set to false
    templates:
      - templates/recordings-ingestion-deployment.yaml
    set:
      cloud: private
      recordingsIngestion.enabled: true
      recordingsIngestion.keda.enabled: false
    asserts:
      - hasDocuments:
          count: 1

  - it: can't set recordingsIngestion.hpa.enabled and recordingsIngestion.keda.enabled to true
    templates:
      - templates/recordings-ingestion-deployment.yaml
    set:
      cloud: private
      recordingsIngestion.enabled: true
      recordingsIngestion.hpa.enabled: true
      recordingsIngestion.keda.enabled: true
    asserts:
      - failedTemplate:
          errorMessage: recordingsIngestion.hpa.enabled should be disabled if recordingsIngestion.keda.enabled enabled

  - it: should be not empty if recordingsIngestion.enabled and recordingsIngestion.keda.enabled are set to true
    templates:
      - templates/recordings-ingestion-deployment.yaml
    set:
      cloud: private
      recordingsIngestion.enabled: true
      recordingsIngestion.keda.enabled: true
    asserts:
      - hasDocuments:
          count: 2

  - it: should have the correct apiVersion
    templates:
      - templates/recordings-ingestion-deployment.yaml
    set:
      cloud: private
      recordingsIngestion.enabled: true
      recordingsIngestion.keda.enabled: true
    asserts:
      - hasDocuments:
          count: 2
      - isAPIVersion:
          of: keda.sh/v1alpha1
        documentIndex: 1

  - it: should be the correct kind
    templates:
      - templates/recordings-ingestion-deployment.yaml
    set:
      cloud: private
      recordingsIngestion.enabled: true
      recordingsIngestion.keda.enabled: true
    asserts:
      - hasDocuments:
          count: 2
      - isKind:
          of: ScaledObject
        documentIndex: 1

  - it: sets ScaledObject spec and kafkaTrigger
    templates:
      - templates/recordings-ingestion-deployment.yaml
    set:
      cloud: private
      recordingsIngestion:
        enabled: true
        keda:
          enabled: true
          kafkaTrigger:
            enabled: true
            metricType: Value
            metadata:
              lagThreshold: "1234"
              activationLagThreshold: "2345"
              excludePersistentLag: "false"
          config:
            pollingInterval: 30
            cooldownPeriod: 300
            idleReplicaCount: 0
            minReplicaCount: 1
            maxReplicaCount: 100
            fallback:
              failureThreshold: 3
              replicas: 6
            advanced:
              restoreToOriginalReplicaCount: "true"
              horizontalPodAutoscalerConfig:
                name: some-hpa
                behavior:
                  scaleDown:
                    stabilizationWindowSeconds: 300
                    policies:
                      - type: Percent
                        value: 100
                        periodSeconds: 15
    asserts:
      - equal:
          path: spec.pollingInterval
          value: 30
        documentIndex: 1
      - equal:
          path: spec.advanced
          value:
            restoreToOriginalReplicaCount: "true"
            horizontalPodAutoscalerConfig:
              name: some-hpa
              behavior:
                scaleDown:
                  stabilizationWindowSeconds: 300
                  policies:
                    - type: Percent
                      value: 100
                      periodSeconds: 15
        documentIndex: 1
      - equal:
          path: spec.fallback
          value:
            failureThreshold: 3
            replicas: 6
        documentIndex: 1
      - contains:
          path: spec.triggers
          content:
            type: kafka
            metricType: Value
            metadata:
              lagThreshold: "1234"
              activationLagThreshold: "2345"
              excludePersistentLag: "false"
              bootstrapServers: RELEASE-NAME-posthog-kafka:9092
              consumerGroup: session-recordings
              topic: session_recording_events
              allowIdleConsumers: "false"
              offsetResetPolicy: earliest
        documentIndex: 1

  - it: sets ScaledObject kafka bootstrap servers correctly if using externalKafka.brokers
    templates:
      - templates/recordings-ingestion-deployment.yaml
    set:
      cloud: private
      kafka:
        enabled: false
      externalKafka:
        brokers:
          - broker1:1234
          - broker2:2345
      recordingsIngestion:
        enabled: true
        keda:
          enabled: true
    asserts:
      - contains:
          path: spec.triggers
          content:
            type: kafka
            metricType: Value
            metadata:
              lagThreshold: "1000"
              activationLagThreshold: "0"
              excludePersistentLag: "true"
              bootstrapServers: broker1:1234,broker2:2345
              consumerGroup: session-recordings
              topic: session_recording_events
              allowIdleConsumers: "false"
              offsetResetPolicy: earliest
        documentIndex: 1

  - it: sets ScaledObject kafka bootstrap servers correctly if using externalKafka.brokers and TLS
    templates:
      - templates/recordings-ingestion-deployment.yaml
    set:
      cloud: private
      kafka:
        enabled: false
      externalKafka:
        tls: true
        brokers:
          - broker1:1234
          - broker2:2345
      recordingsIngestion:
        enabled: true
        keda:
          enabled: true
    asserts:
      - contains:
          path: spec.triggers
          content:
            type: kafka
            metricType: Value
            metadata:
              tls: enable
              lagThreshold: "1000"
              activationLagThreshold: "0"
              excludePersistentLag: "true"
              bootstrapServers: broker1:1234,broker2:2345
              consumerGroup: session-recordings
              topic: session_recording_events
              allowIdleConsumers: "false"
              offsetResetPolicy: earliest
        documentIndex: 1
