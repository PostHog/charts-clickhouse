suite: PostHog events deployment definition
templates:
  - templates/events-deployment.yaml
  - templates/secrets.yaml

tests:
  - it: should be empty if events.enabled is set to false
    template: templates/events-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
      events.enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should have the correct apiVersion
    template: templates/events-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
    asserts:
      - hasDocuments:
          count: 1
      - isAPIVersion:
          of: apps/v1

  - it: should be the correct kind
    template: templates/events-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment

  - it: should have a pod securityContext
    template: templates/events-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
      events.podSecurityContext.enabled: true
      events.podSecurityContext.runAsUser: 1001
      events.podSecurityContext.fsGroup: 2000
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.template.spec.securityContext.runAsUser
          value: 1001
      - equal:
          path: spec.template.spec.securityContext.fsGroup
          value: 2000

  - it: should have a container securityContext
    template: templates/events-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
      events.securityContext.enabled: true
      events.securityContext.runAsUser: 1001
      events.securityContext.allowPrivilegeEscalation: false
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.template.spec.containers[0].securityContext.runAsUser
          value: 1001
      - equal:
          path: spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation
          value: false

  - it: should not have a pod securityContext
    template: templates/events-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
      events.podSecurityContext.enabled: false
    asserts:
      - hasDocuments:
          count: 1
      - isEmpty:
          path: spec.template.spec.securityContext
          value: 1001

  - it: should not have a container securityContext
    template: templates/events-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
      events.securityContext.enabled: false
    asserts:
      - hasDocuments:
          count: 1
      - isEmpty:
          path: spec.template.spec.containers[0].securityContext

  # NOTE: historically we have had the events pod use any resources specified
  # for web. However, we would like to separate the connection and allow them to
  # be set independently, while maintaining backwards compat. for installs that
  # are setting the web resources.
  - it: should set resources when specified
    template: templates/events-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local
      events:
        resources:
          limits:
            cpu: 1000m
            memory: 16Gi
          requests:
            cpu: 4000m
            memory: 16Gi
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources
          value:
            limits:
              cpu: 1000m
              memory: 16Gi
            requests:
              cpu: 4000m
              memory: 16Gi

  - it: for backwards compat. should use the web resources if specified
    template: templates/events-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local
      web:
        resources:
          limits:
            cpu: 1000m
            memory: 16Gi
          requests:
            cpu: 4000m
            memory: 16Gi
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources
          value:
            limits:
              cpu: 1000m
              memory: 16Gi
            requests:
              cpu: 4000m
              memory: 16Gi

  - it: should set resources when specified and override web resource settings
    template: templates/events-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local
      events:
        resources:
          limits:
            cpu: 1000m
            memory: 16Gi
          requests:
            cpu: 4000m
            memory: 16Gi
      web:
        resources:
          limits:
            cpu: 2000m
            memory: 6Gi
          requests:
            cpu: 2000m
            memory: 6Gi
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources
          value:
            limits:
              cpu: 1000m
              memory: 16Gi
            requests:
              cpu: 4000m
              memory: 16Gi

  - it: sets SENTRY_DSN env var
    template: templates/events-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
      sentryDSN: sentry.endpoint
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SENTRY_DSN
            value: sentry.endpoint

  - it: uses web.env if events.env is empty
    template: templates/events-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
      env:
        - name: FIRST
          value: one
      web:
        env:
          - name: SECOND
            value: two
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: FIRST
            value: one
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SECOND
            value: two

  - it: ignores web.env if events.env is set
    template: templates/events-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local # TODO: remove once secrets.yaml will be fixed/removed
      env:
        - name: FIRST
          value: one
      web:
        env:
          - name: SECOND
            value: two
      events:
        env:
          - name: THIRD
            value: three
    asserts:
    - contains:
        path: spec.template.spec.containers[0].env
        content:
          name: FIRST
          value: one
    - contains:
        path: spec.template.spec.containers[0].env
        content:
          name: THIRD
          value: three
    - notContains:
        path: spec.template.spec.containers[0].env
        content:
          name: SECOND
          value: two

  - it: allows setting imagePullSecrets
    template: templates/events-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local
      image.pullSecrets: [secret]
      events.enabled: true
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.template.spec.imagePullSecrets
          value: [name: secret]

  - it: allows setting readinessGates
    template: templates/events-deployment.yaml # TODO: remove once secrets.yaml will be fixed/removed
    set:
      cloud: local
      image.pullSecrets: [secret]
      events.enabled: true
      events:
        readinessGates:
          - conditionType: target-health.alb.ingress.k8s.aws/posthog_ingress_posthog_events_8000
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.template.spec.readinessGates[0].conditionType
          value: target-health.alb.ingress.k8s.aws/posthog_ingress_posthog_events_8000



