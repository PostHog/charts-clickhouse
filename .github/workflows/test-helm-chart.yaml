# This is a GitHub workflow defining a set of jobs with a set of steps.
# ref: https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions
#
name: Test chart

on: [push]

jobs:
  test-chart:
    runs-on: ubuntu-20.04
    timeout-minutes: 30

    strategy:
      # Keep running even if one variation of the job fail
      fail-fast: false
      matrix:
        # We run this job multiple times with different parameterization
        # specified below, these parameters have no meaning on their own and
        # gain meaning on how job steps use them.
        #
        # k3s-version: https://github.com/rancher/k3s/tags
        # k3s-channel: https://update.k3s.io/v1-release/channels
        include:
          - k3s-channel: v1.21
            test: install
          - k3s-channel: v1.20
            test: install
          - k3s-channel: v1.19
            test: install
          - k3s-channel: v1.18
            test: install
          - k3s-channel: v1.17
            test: install

          # We run two upgrade tests where we first install an already released
          # Helm chart version and then upgrades to the version we are now
          # testing. We test upgrading from the latest main version.
          #
          # It can be very useful to see the "Helm diff" step's output from the
          # latest dev version.
          - k3s-channel: v1.19
            test: upgrade

    steps:
      - uses: actions/checkout@v2

      # Starts a k8s cluster with NetworkPolicy enforcement and installs both
      # kubectl and helm
      #
      # ref: https://github.com/jupyterhub/action-k3s-helm/
      - uses: jupyterhub/action-k3s-helm@v1
        with:
          k3s-channel: v1.19
          metrics-enabled: false
          traefik-enabled: false
          docker-enabled: true

      - uses: actions/checkout@v2
        if: matrix.test == 'upgrade'
        with:
          ref: main
          path: main

      - name: (Upgrade) Install our helm chart from main branch
        if: matrix.test == 'upgrade'
        run: |
          helm upgrade --install posthog main/charts/posthog --timeout 20m -f ci/values.yaml --debug

      - name: "(Upgrade) Install helm diff"
        if: matrix.test == 'upgrade'
        run: |
          helm plugin install https://github.com/databus23/helm-diff

      - name: "(Upgrade) Helm diff ${{ matrix.upgrade-from }} chart with local chart"
        if: matrix.test == 'upgrade'
        run: |
          helm diff upgrade --install posthog charts/posthog -f ci/values.yaml --debug

      - name: "(Upgrade) Await chart install"
        if: matrix.test == 'upgrade'
        uses: jupyterhub/action-k8s-await-workloads@v1
        with:
          timeout: 900
          max-restarts: 15

      - name: Install our helm chart
        run: |
          helm upgrade --install posthog charts/posthog --timeout 20m -f ci/values.yaml

      # GitHub Action reference: https://github.com/jupyterhub/action-k8s-await-workloads
      - name: Await all deployments to start
        uses: jupyterhub/action-k8s-await-workloads@main
        with:
          timeout: 900
          max-restarts: 15

      - name: Setup for ingestion test
        run: |
          export WEB_POD=$(kubectl get pods -l role=web -o jsonpath="{.items[].metadata.name}")
          kubectl exec $WEB_POD -- python manage.py setup_dev --no-data

          echo "POSTHOG_HOSTNAME=$(kubectl get svc posthog -o jsonpath="{.spec.clusterIP}")" >> $GITHUB_ENV

          # Sleep until web service is ready to respond
          sleep 20

      # GitHub Action reference: https://github.com/k6io/action
      - name: Run ingestion test using k6
        uses: k6io/action@v0.2.0
        with:
          filename: ci/k6-ingestion-test.js

      # GitHub Action reference: https://github.com/jupyterhub/action-k8s-namespace-report
      - name: Emit namespace report
        uses: jupyterhub/action-k8s-namespace-report@v1
        if: always()
